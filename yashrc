# if yash is built with line-editing enabled...
if command --identify --builtin-command bindkey >/dev/null; then
	# print job status update ASAP, but only while line-editing
	set --notify-le

	# some terminfo data are broken; meta flags have to be ignored for UTF-8
	set --le-no-conv-meta

	# I'll try emacs mode
	set --emacs
fi

# arrange history
HISTFILE=~/.yash_history
HISTSIZE=10000
HISTRMDUP=10000

# Get ourselves a nice prompt
ks() { s="$?" ; $* ; return "$s" ; }
prompt_git() {
    porcelain="$(git status --branch --porcelain 2>/dev/null)"
    if test "$?" = 0; then
        local branch="$(printf '%s' "$porcelain" | sed -n 's/\.\.\..*//;1s/## //p')"
        local behind="$(printf '%s' "$porcelain" | sed -n '1s/## .*behind \([0-9]*\).*/-\1/p')"
        local ahead="$(printf '%s' "$porcelain" | sed -n '1s/## .*ahead \([0-9]*\).*/+\1/p')"
        local status="$({ echo OK; printf '%s' "$porcelain" | sed '/##/d;s/\(..\).*/\1/'; } | tail -1)"
        
        echo " (${branch}${behind}${ahead}|${status})"
    fi
}
prompt_pwd() {
    pwd | sed -e "s_${HOME}_~_" -e 's_\(/*\.*.\)[^/]*/_\1/_g'
}
prompt_agent() {
    [ -z "$SSH_AGENT_PID" ] || echo " (A)"
}
prompt_status() {
    if [ "$?" = "0" ]
    then echo "$"
    else echo "%"
    fi
}
prompt_date() {
	date +%H:%M:%S
}
prompt_mail() {
	unread="$(mlist -nds $(mdirs /data/mail) | wc -l)"
	[ "$unread" -eq 1 ] && printf ' (1 mail)'
	[ "$unread" -gt 1 ] && printf ' (%s mails)' "$unread"
}
BOLD="\fo."
GREEN="\fg."
RESET="\fD."
PS1="$BOLD[\$(ks prompt_date)]$RESET $GREEN\$(ks prompt_pwd)$RESET\$(ks prompt_git)\$(ks prompt_agent)\$(ks prompt_mail) \$(prompt_status) "
unset BOLD
unset GREEN
unset RESET

# Color ls
alias ls="ls --color=auto"
alias ll="lr -Fl1Ghov"

# Email
alias marchive="mflag -fSt"
alias mspam="mflag -fST"
alias mkeep="mflag -FSt"
alias munread="mdirs /data/mail | mlist -nds | mseq -S && mscan"
alias minbox="mdirs /data/mail | mlist -ndt | mpick -t 'flagged || ! seen' | msort -d | mthread | mseq -S && mscan"
export MBLAZE_PAGER='less -RF'

# There is only one vis
alias vim="vis"
alias vi="vis"
alias nano="vis"

# Ready for ssh'ing
alias agent='eval "$(ssh-agent)" && ssh-add'
alias unlock='gpg-connect-agent <<<bye'

alias weechat="ssh -t weechat@Hetzner abduco -A weechat"
alias agenda="khal list today 7d"

# Ledger
alias haccounts="hledger -I --alias '/.*:Accounts [^:]*:(.*)/=Accounts:\1' bal accounts"
alias ladd='ladd -a /data/documents/ledger/2021/main.journal /data/documents/ledger/*/main.journal'
alias iadd='iadd /data/documents/ledger/2021/main.journal'
alias is='hledger is -b $(date -d "7 months ago" +%Y-%m) -e $(date +%Y-%m) -MTA --tree -2'
alias cf='hledger cf -b $(date -d "7 months ago" +%Y-%m) -e $(date +%Y-%m) -MTA --tree -2'
alias bs='hledger bs not:accounts'

# Rust debugging
alias rustdb="RUST_TEST_THREADS=1 RUST_GDB=cgdb rust-gdb"
alias rtdb='rustdb $(cargo test -v 2>&1 | grep "Running.*$(pwd)" |  cut -f2 -d"\`")'

go() {
    dir="$(lr /home /data /etc -t '(name ~~ ".*" && prune || print) && type = d && !(name = ".git")' \
          | sk --height 10 \
          )"
    [ -n "$dir" ] && cd "$dir" || false
}

terminfo() {
    infocmp -x | ssh $@ 'cat > $TERM.info && tic -x $TERM.info && rm $TERM.info'
}
